# Automatically build Nix Flake Configuration on PR
#
# For more information, see:
# https://github.com/cachix/install-nix-action
name: "Build Nix Flake Configuration"
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
env:
  NIX_SHOW_STATS: 1
jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repo
      uses: actions/checkout@v2.3.4
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        submodules: recursive
    - name: Install Nix
      uses: cachix/install-nix-action@v14
      with:
        install_url: https://github.com/numtide/nix-unstable-installer/releases/latest/download/install
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.ACCESS_TOKEN }}
    - name: Setup Cachix
      uses: cachix/cachix-action@v10
      with:
        name: maydayv7-dotfiles
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Import Keys
      env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.SSH_KEY }}" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add
    - name: Build User V7
      run: nix build .#homeManagerConfigurations.v7.activationPackage
    - name: Build User Navya
      run: nix build .#homeManagerConfigurations.navya.activationPackage
    - name: Build Device Vortex
      run: nix build .#nixosConfigurations.Vortex.config.system.build.toplevel
    - name: Build Device Futura
      run: nix build .#nixosConfigurations.Futura.config.system.build.toplevel
